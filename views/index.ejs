<!DOCTYPE html>
<html lang="ko">
  <head>
      <% include ./partials/head %>
  </head>
  <body class="container">
    <header>
        <% include partials/header %>
    </header>
    <main>
        <div class="jumbotron">
            <h1>역경매 플랫폼</h1>
            <p>역경매 플랫폼에 오신걸 환영합니다.</p>
        </div>
        <div class="">
          <ul>
            <% for(var i=0; i < topics.length; i++){ %>
              <li>
                <a href='/content/<%= topics[i].id %>'><%= topics[i].title %></a>
              </li>
            <% } %>
          </ul>
        </div>

        <div class="">
          <% if (locals.topic){ %>
            <h2><%= topic.title %></h2>
            <h4><%= topic.description %><h4>
            by <%= topic.author %>
          <%}else{%>
            <h2>Welcome</h2>
            This is server side javascript tutorial.
          <%}%>
        </div>

        <div class="">
          <a href="/content/add">글 작성하기</a>
        </div>
    </main>



    <footer>
        <% include partials/footer %>
    </footer>

</body>
</html>

<script>
$('#exampleModal').on('show.bs.modal', function (event) {
  var button = $(event.relatedTarget) // Button that triggered the modal
  var recipient = button.data('whatever') // Extract info from data-* attributes
  // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
  // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
  var modal = $(this)
  modal.find('.modal-title').text('New message to ' + recipient)
  modal.find('.modal-body input').val(recipient)
});


  //위치 정보 가져오기
  /*
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(showPosition, showError);
  }else {
    console.log('해당 브라우저에서 Geolocation API를 지원하지 않습니다.');
  }
  function showPosition(position) {
    console.log(position.coords.latitude + ", " + position.coords.longitude);
  }
  function showError(error){
    switch(error.code) {
      case error.PERMISSION_DENIED:
          // 사용자가 위치정보 사용을 허용하지 않았을 때
          console.log("User denied the request for Geolocation.");
          break;
      case error.POSITION_UNAVAILABLE:
          // 위치 정보 사용이 불가능할 때
          console.log("Location information is unavailable.");
          break;
      case error.TIMEOUT:
          // 위치 정보를 가져오려 시도했지만, 시간이 초과되었을 때
          console.log("The request to get user location timed out.");
          break;
      case error.UNKNOWN_ERROR:
          // 기타 알 수 없는 오류가 발생하였을 때
          console.log("An unknown error occurred.");
          break;
    }
  }*/
</script>
